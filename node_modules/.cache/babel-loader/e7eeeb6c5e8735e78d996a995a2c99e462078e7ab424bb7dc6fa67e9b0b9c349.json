{"ast":null,"code":"var _jsxFileName = \"/Users/yum.ishii/Desktop/keiba-design-lp/src/components/SceneSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { SceneCard } from \"./SceneCard\";\nimport { SliderArrow } from \"./SliderArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SceneSlider({\n  scenes\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const sliderRef = useRef(null);\n  const getVisibleCount = () => {\n    if (typeof window === 'undefined') return 3; // SSR/Initial\n    if (window.innerWidth >= 1280) return 4;\n    if (window.innerWidth >= 1024) return 3;\n    if (window.innerWidth >= 768) return 2;\n    return 1;\n  };\n  const [visibleCount, setVisibleCount] = useState(getVisibleCount());\n  useEffect(() => {\n    const handleResize = () => {\n      const newVisibleCount = getVisibleCount();\n      if (newVisibleCount !== visibleCount) {\n        setVisibleCount(newVisibleCount);\n        setCurrentIndex(0); // 表示数が変わったらスライダーを最初に戻す\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, [visibleCount]);\n  const totalPages = Math.ceil(scenes.length / visibleCount);\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : totalPages - 1);\n  };\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => prevIndex < totalPages - 1 ? prevIndex + 1 : 0);\n  };\n\n  // ページネーションロジックに基づいて表示するシーンを計算\n  const startIndex = currentIndex * visibleCount;\n  const endIndex = startIndex + visibleCount;\n  const visibleScenes = scenes.slice(startIndex, endIndex);\n\n  // 不足分を最初のシーンから補う（ループ感を出すため）\n  const needsRefill = visibleScenes.length < visibleCount;\n  if (needsRefill) {\n    const refillCount = visibleCount - visibleScenes.length;\n    visibleScenes.push(...scenes.slice(0, refillCount));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full max-w-7xl mx-auto px-12 md:px-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-hidden\",\n      ref: sliderRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex -mx-2\",\n        children: scenes.map((scene, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 p-2 transition-transform duration-500 ease-in-out\",\n          style: {\n            transform: `translateX(-${currentIndex * 100}%)`\n          },\n          children: /*#__PURE__*/_jsxDEV(SceneCard, {\n            ...scene\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, scene.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderArrow, {\n      direction: \"left\",\n      onClick: handlePrev,\n      variant: \"scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderArrow, {\n      direction: \"right\",\n      onClick: handleNext,\n      variant: \"scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SceneSlider, \"65IIezRkI/hIkliJ1sn6E8RRMGg=\");\n_c = SceneSlider;\nvar _c;\n$RefreshReg$(_c, \"SceneSlider\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SceneCard","SliderArrow","jsxDEV","_jsxDEV","SceneSlider","scenes","_s","currentIndex","setCurrentIndex","sliderRef","getVisibleCount","window","innerWidth","visibleCount","setVisibleCount","handleResize","newVisibleCount","addEventListener","removeEventListener","totalPages","Math","ceil","length","handlePrev","prevIndex","handleNext","startIndex","endIndex","visibleScenes","slice","needsRefill","refillCount","push","className","children","ref","map","scene","index","style","transform","fileName","_jsxFileName","lineNumber","columnNumber","id","direction","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/yum.ishii/Desktop/keiba-design-lp/src/components/SceneSlider.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { SceneCard } from \"./SceneCard\";\nimport { SliderArrow } from \"./SliderArrow\";\n\nexport function SceneSlider({ scenes }) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const sliderRef = useRef(null);\n\n  const getVisibleCount = () => {\n    if (typeof window === 'undefined') return 3; // SSR/Initial\n    if (window.innerWidth >= 1280) return 4;\n    if (window.innerWidth >= 1024) return 3;\n    if (window.innerWidth >= 768) return 2;\n    return 1;\n  };\n\n  const [visibleCount, setVisibleCount] = useState(getVisibleCount());\n\n  useEffect(() => {\n    const handleResize = () => {\n      const newVisibleCount = getVisibleCount();\n      if (newVisibleCount !== visibleCount) {\n        setVisibleCount(newVisibleCount);\n        setCurrentIndex(0); // 表示数が変わったらスライダーを最初に戻す\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, [visibleCount]);\n  \n  const totalPages = Math.ceil(scenes.length / visibleCount);\n\n  const handlePrev = () => {\n    setCurrentIndex((prevIndex) => (prevIndex > 0 ? prevIndex - 1 : totalPages - 1));\n  };\n  const handleNext = () => {\n    setCurrentIndex((prevIndex) => (prevIndex < totalPages - 1 ? prevIndex + 1 : 0));\n  };\n  \n  // ページネーションロジックに基づいて表示するシーンを計算\n  const startIndex = currentIndex * visibleCount;\n  const endIndex = startIndex + visibleCount;\n  const visibleScenes = scenes.slice(startIndex, endIndex);\n\n  // 不足分を最初のシーンから補う（ループ感を出すため）\n  const needsRefill = visibleScenes.length < visibleCount;\n  if(needsRefill) {\n      const refillCount = visibleCount - visibleScenes.length;\n      visibleScenes.push(...scenes.slice(0, refillCount));\n  }\n\n\n  return (\n    <div className=\"relative w-full max-w-7xl mx-auto px-12 md:px-16\">\n      <div className=\"overflow-hidden\" ref={sliderRef}>\n        <div className=\"flex -mx-2\">\n          {scenes.map((scene, index) => (\n            <div\n              key={scene.id}\n              className=\"flex-shrink-0 w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 p-2 transition-transform duration-500 ease-in-out\"\n              style={{\n                transform: `translateX(-${currentIndex * 100}%)`,\n              }}\n            >\n              <SceneCard {...scene} />\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <SliderArrow direction=\"left\" onClick={handlePrev} variant=\"scene\" />\n      <SliderArrow direction=\"right\" onClick={handleNext} variant=\"scene\" />\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}