{"ast":null,"code":"var _jsxFileName = \"/Users/yum.ishii/Desktop/keiba-design-lp/src/components/SceneSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { SceneCard } from \"./SceneCard\";\nimport { SliderArrow } from \"./SliderArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SceneSlider({\n  scenes\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [visibleCount, setVisibleCount] = useState(1);\n  const sliderContentRef = useRef(null);\n\n  // 画面幅から表示枚数を計算\n  useEffect(() => {\n    const updateVisibleCount = () => {\n      if (window.innerWidth >= 1280) setVisibleCount(4);else if (window.innerWidth >= 1024) setVisibleCount(3);else if (window.innerWidth >= 640) setVisibleCount(2);else setVisibleCount(1);\n    };\n    updateVisibleCount();\n    window.addEventListener('resize', updateVisibleCount);\n    return () => window.removeEventListener('resize', updateVisibleCount);\n  }, []);\n\n  // currentIndexの最大値を制限\n  useEffect(() => {\n    const maxIndex = Math.max(0, scenes.length - visibleCount);\n    if (currentIndex > maxIndex) {\n      setCurrentIndex(maxIndex);\n    }\n  }, [visibleCount, scenes.length]);\n\n  // --- スライド操作 ---\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  const handleNext = () => {\n    const maxIndex = Math.max(0, scenes.length - visibleCount);\n    if (currentIndex < maxIndex) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  // --- スライド位置の計算 ---\n  useEffect(() => {\n    if (sliderContentRef.current) {\n      const cardWidth = sliderContentRef.current.children[0].offsetWidth;\n      const offset = -currentIndex * cardWidth;\n      sliderContentRef.current.style.transform = `translateX(${offset}px)`;\n    }\n  }, [currentIndex, visibleCount]);\n  const maxIndex = Math.max(0, scenes.length - visibleCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full max-w-7xl mx-auto px-12 md:px-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: sliderContentRef,\n        className: \"flex transition-transform duration-500 ease-in-out\",\n        children: scenes.map(scene => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 p-2\",\n          children: /*#__PURE__*/_jsxDEV(SceneCard, {\n            ...scene\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, scene.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), currentIndex > 0 && /*#__PURE__*/_jsxDEV(SliderArrow, {\n      direction: \"left\",\n      onClick: handlePrev,\n      variant: \"scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), currentIndex < maxIndex && /*#__PURE__*/_jsxDEV(SliderArrow, {\n      direction: \"right\",\n      onClick: handleNext,\n      variant: \"scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(SceneSlider, \"ZQLK/CmAjC/567E+yzZBIG7Hsis=\");\n_c = SceneSlider;\nvar _c;\n$RefreshReg$(_c, \"SceneSlider\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SceneCard","SliderArrow","jsxDEV","_jsxDEV","SceneSlider","scenes","_s","currentIndex","setCurrentIndex","visibleCount","setVisibleCount","sliderContentRef","updateVisibleCount","window","innerWidth","addEventListener","removeEventListener","maxIndex","Math","max","length","handlePrev","handleNext","current","cardWidth","children","offsetWidth","offset","style","transform","className","ref","map","scene","fileName","_jsxFileName","lineNumber","columnNumber","id","direction","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/yum.ishii/Desktop/keiba-design-lp/src/components/SceneSlider.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { SceneCard } from \"./SceneCard\";\nimport { SliderArrow } from \"./SliderArrow\";\n\nexport function SceneSlider({ scenes }) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [visibleCount, setVisibleCount] = useState(1);\n  const sliderContentRef = useRef(null);\n\n  // 画面幅から表示枚数を計算\n  useEffect(() => {\n    const updateVisibleCount = () => {\n      if (window.innerWidth >= 1280) setVisibleCount(4);\n      else if (window.innerWidth >= 1024) setVisibleCount(3);\n      else if (window.innerWidth >= 640) setVisibleCount(2);\n      else setVisibleCount(1);\n    };\n    updateVisibleCount();\n    window.addEventListener('resize', updateVisibleCount);\n    return () => window.removeEventListener('resize', updateVisibleCount);\n  }, []);\n\n  // currentIndexの最大値を制限\n  useEffect(() => {\n    const maxIndex = Math.max(0, scenes.length - visibleCount);\n    if (currentIndex > maxIndex) {\n      setCurrentIndex(maxIndex);\n    }\n  }, [visibleCount, scenes.length]);\n\n  // --- スライド操作 ---\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const handleNext = () => {\n    const maxIndex = Math.max(0, scenes.length - visibleCount);\n    if (currentIndex < maxIndex) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  // --- スライド位置の計算 ---\n  useEffect(() => {\n    if (sliderContentRef.current) {\n      const cardWidth = sliderContentRef.current.children[0].offsetWidth;\n      const offset = -currentIndex * cardWidth;\n      sliderContentRef.current.style.transform = `translateX(${offset}px)`;\n    }\n  }, [currentIndex, visibleCount]);\n\n  const maxIndex = Math.max(0, scenes.length - visibleCount);\n\n  return (\n    <div className=\"relative w-full max-w-7xl mx-auto px-12 md:px-16\">\n      <div className=\"overflow-hidden\">\n        <div\n          ref={sliderContentRef}\n          className=\"flex transition-transform duration-500 ease-in-out\"\n        >\n          {scenes.map((scene) => (\n            <div key={scene.id} className=\"flex-shrink-0 w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 p-2\">\n              <SceneCard {...scene} />\n            </div>\n          ))}\n        </div>\n      </div>\n      {currentIndex > 0 && (\n        <SliderArrow direction=\"left\" onClick={handlePrev} variant=\"scene\" />\n      )}\n      {currentIndex < maxIndex && (\n        <SliderArrow direction=\"right\" onClick={handleNext} variant=\"scene\" />\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}